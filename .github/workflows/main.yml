name: cloudray-profile-actions
on: workflow_dispatch
env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: cloudray-vprofile-app
  EKS_CLUSTER: cloudray-vp-eks

jobs:
  Testing: 
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Compile Java code
        run: mvn compile

      - name: Maven test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle 

      - name: Set Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' 
          java-version: '21'

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: sonar-scanner
            -Dsonar.host.url='https://sonarcloud.io'
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=src/
            -Dsonar.java.binaries=target/classes 
            -Dsonar.junit.reportsPath=target/surefire-reports/
            -Dsonar.jacoco.reportsPath=target/jacoco.exec
            -Dsonar.java.checkstyle.reportsPath=target/checkstyle-result.xml

      - name: SonarQube Quality check gate
        id: sonarqube-quality-check-gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  BUILD_AND_PUBLISH:
  needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./